plugins {
    id "java"
    id "io.qameta.allure" version "2.8.1"  //  https://github.com/allure-framework/allure-gradle/releases
}

group getGroup()
version getVersion()

sourceCompatibility = JavaVersion.current()
targetCompatibility = JavaVersion.current()

compileJava {
    enabled = false
    options.fork = true
    options.incremental = true
}

processResources {
    enabled = false
}

compileTestJava {
    enabled = true
    options.fork = true
    options.incremental = true
}

test {
    useJUnitPlatform()
    ignoreFailures(true)
    reports {
        html.enabled = false
        junitXml.enabled = false
    }
    testLogging {
        showStandardStreams = false
        exceptionFormat = "full"
    }
}

allure {
    def allureVersion = "2.13.5"  //  https://github.com/allure-framework/allure2/releases
    version = allureVersion
    autoconfigure = true
    aspectjweaver = false
    allureJavaVersion = allureVersion
    useJUnit5 {
        version = allureVersion
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //  JUnit 5
    testImplementation("org.junit.jupiter:junit-jupiter-api:latest.release")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:latest.release")

    //  Selenide + Allure
    testImplementation("com.codeborne:selenide:latest.release")
    testImplementation("io.qameta.allure:allure-selenide:latest.release")
    testImplementation("com.github.automatedowl:allure-environment-writer:latest.release")

    //  Spring framework
    testImplementation("org.springframework:spring-context:latest.release")
    testImplementation("org.springframework:spring-test:latest.release")

    //  Lombok
    testAnnotationProcessor("org.projectlombok:lombok:latest.release")
    testCompileOnly("org.projectlombok:lombok:latest.release")

    //  Slf4j
    testImplementation("org.slf4j:slf4j-nop:latest.release")
}
