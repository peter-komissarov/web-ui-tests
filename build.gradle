plugins {
    id "java"
    id "io.qameta.allure" version "${allureGradleVersion}"
}

repositories {
    mavenCentral()
}

compileJava {
    enabled = false
    options.encoding = "${encoding}"
    options.fork = true
    options.incremental = true
}

processResources {
    enabled = false
}

compileTestJava {
    enabled = true
    options.encoding = "${encoding}"
    options.fork = true
    options.incremental = true
}

processTestResources {
    enabled = true
}

test {
    useJUnitPlatform()
    ignoreFailures(true)
    reports {
        html.enabled = false
        junitXml.enabled = false
    }
    testLogging {
        showStandardStreams = false
        exceptionFormat = "full"
    }
}

allure {
    version = "${allureFrameworkVersion}"
    configuration = "testImplementation"
    aspectjweaver = true
    useJUnit5 {
        version = "${allureFrameworkVersion}"
    }
    autoconfigure = true
}

dependencies {
    //  JUnit 5
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitAPIVersion}"
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitEngineVersion}")

    //  Selenide + Allure
    testImplementation("com.codeborne:selenide:${selenideVersion}")
    testImplementation("io.qameta.allure:allure-selenide:${allureSelenideVersion}")
    testImplementation("com.github.automatedowl:allure-environment-writer:${allureEnvironmentWriterVersion}")

    //  Spring framework
    testImplementation("org.springframework:spring-context:${springContextVersion}")
    testImplementation("org.springframework:spring-test:${springTestVersion}")

    //  Lombok
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")

    //  Slf4j
    testImplementation("org.slf4j:slf4j-nop:${slf4jNopVersion}")
}
